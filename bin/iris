#!/bin/bash
#
# Init file for IRIS server daemon
#
# chkconfig: 2345 97 02
# description: IRIS server daemon
#
# processname: iris

# source function library
. /etc/rc.d/init.d/functions

RETVAL=0
SERVICE=$(basename $0)
PROG=iris_service
DIR=/usr/share/java/iris-server
USER=tms
OPTIONS="/usr/bin/java -server -Xmx256m -jar $DIR/iris-server-*.jar"

# SELinux requires runuser instead of su
if [ -x /sbin/runuser ]
then
	SU=/sbin/runuser
else
	SU=su
fi

function create_keystores() {
	echo "Creating IRIS keystores"
	echo
	echo "Distinguished Name needed for self-signed certificate:"
	k_pws=`head -c8 < /dev/random | base64`
	k_pwc=`head -c8 < /dev/random | base64`
	k_opts="-noprompt -alias iris-sonar"
	k_cert=/etc/iris/iris-sonar-public.cert
	k_server=/etc/iris/iris-server.keystore
	k_client=/etc/iris/iris-client.keystore
	k_sopts="$k_opts -keystore $k_server -storepass $k_pws -keypass $k_pws"
	k_copts="$k_opts -keystore $k_client -storepass $k_pwc -keypass $k_pwc"
	umask 0037
	keytool $k_sopts -genkeypair
	keytool $k_sopts -export -file $k_cert
	keytool $k_copts -import -file $k_cert
	chown tms.tms $k_server $k_cert $k_client
	p_server=/etc/iris/iris-server.properties
	p_client=/etc/iris/iris-client.properties
	sed_s="s:.*keystore.password=.*:keystore.password=$k_pws:"
	sed_c="s:.*keystore.password=.*:keystore.password=$k_pwc:"
	sed -i ''$sed_s'' $p_server
	sed -i ''$sed_c'' $p_client
}

function update_hostname() {
	host=`hostname -f`
	p_client=/etc/iris/iris-client.properties
	sed -i ''s,.*TMSIpAddress=.*,TMSIpAddress=$host,'' $p_client
	sed -i ''s,.*keystore.file=.*,keystore.file=http://$host/iris-client/iris-client.keystore,'' $p_client
	sed -i ''s,.*sonar.host=.*,sonar.host=$host,'' $p_client
}

function create_links() {
	version=`ls -d -1 /usr/share/java/iris-server-* | head -n 1`
	ln -snf $version /usr/share/java/iris-server
	version=`ls -d -1 /var/www/html/iris-client-* | head -n 1`
	ln -snf $version /var/www/html/iris-client
}

function check_initialized() {
	if [ ! -r /etc/iris/iris-server.keystore ]
	then
		echo "/etc/iris/iris-server.keystore not found."
		return 1
	fi
	if [ ! -r /etc/iris/iris-client.keystore ]
	then
		echo "/etc/iris/iris-client.keystore not found."
		return 1
	fi
	return 0
}

function start() {
	pid=`pidof -s $PROG`
	if [ $pid ]
	then
		echo $"$SERVICE already running."
	else
		check_initialized
		if [ "$?" != "0" ]
		then
			echo "Have you tried 'service iris init'?"
			exit 1
		fi
		install -o apache -g apache -m 0444 /etc/iris/iris-client.keystore /var/www/html/iris-client/
		install -o apache -g apache -m 0444 /etc/iris/iris-client.properties /var/www/html/iris-client/
		echo -n $"Starting $SERVICE:"
		$SU $USER -s /bin/sh -c "$PROG $OPTIONS &" && success || failure
		RETVAL=$?
		[ "$RETVAL" = 0 ] && touch /var/lock/subsys/$SERVICE
		echo
	fi
}

function stop() {
	echo -n $"Stopping $SERVICE:"
	killproc $PROG -TERM
	RETVAL=$?
	[ "$RETVAL" = 0 ] && rm -f /var/lock/subsys/$SERVICE
	echo
}

case "$1" in
	init)
		create_keystores
		update_hostname
		create_links
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		sleep 1
		start
		;;
	status)
		status $PROG
		RETVAL=$?
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=1
esac

exit $RETVAL
