<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
	<meta name="Author" content="Douglas Lau"/>
	<link href="iris_doc.css" rel="stylesheet" type="text/css"/>
	<title>IRIS Administrator Guide</title>
	<script type="text/javascript" src="admin_guide.js"></script>
</head>

<body>
<div class="sidebar">
<h1 class="contents">Contents</h1>
<h2 class="contents"><a id="overview_link" href="#overview">Overview</a></h2>
<h2 class="contents"><a id="installation_link" href="#installation">Installation</a></h2>
<h2 class="contents"><a id="basic_setup_link" href="#basic_setup">Basic Setup</a></h2>
<h2 class="contents"><a id="devices_link" href="#devices">Devices</a></h2>
<h2 class="contents"><a id="features_link" href="#features">Features</a></h2>
<h2 class="contents"><a id="troubleshooting_link" href="#troubleshooting">Troubleshooting</a></h2>
<h2 class="contents"><a id="maintenance_link" href="#maintenance">Maintenance</a></h2>
<h2 class="contents"><a id="development_link" href="#development">Development</a></h2>
</div>

<div class="mainbar">
<div id="stamp">20 July 2010</div>
<h1>IRIS Administrator Guide</h1>

<h2 id="overview">Overview
<span class="show">[<span id="overview_show">show</span><span id="overview_hide">hide</span>]</span></h2>
<div id="overview_div">
<p>
	IRIS is an <a href="http://www.opensource.org/docs/osd">open source</a>
	advanced traffic management system.
	It provides an integrated platform for transportation agencies to
	manage traffic monitoring and control devices.
	The software is written in <a href="http://www.java.com">Java</a> and
	licensed for anyone to use under the
	<a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">GPL</a>.
	IRIS stands for Intelligent Roadway Information System.
</p>

<svg class="right" xmlns="http://www.w3.org/2000/svg" version="1.1"
     width="640" height="480">
  <title>System Architecture</title>
  <defs>
    <marker id="Arrow1Mend" orient="auto" style="overflow:visible">
      <path d="M 0,0 5,-5 -12.5,0 5,5 0,0 z"
            transform="matrix(-0.4,0,0,-0.4,-4,0)"
            style="stroke:#000;stroke-width:1pt;marker-start:none"/>
    </marker>
  </defs>
  <g style="font-size:20px;font-family:Liberation Sans">
    <text style="font-size:28px">
      <tspan x="384" y="64">IRIS System</tspan>
      <tspan x="384" y="94">Architecture</tspan>
    </text>
    <g transform="translate(112,24)">
      <g style="fill:#c4f9ff;stroke:#000;stroke-width:2">
        <g style="opacity:0.5">
          <rect x="16" y="16" width="200" height="88" ry="8"
                style="opacity:0.5"/>
          <rect x="8" y="8" width="200" height="88" ry="8"/>
        </g>
        <rect x="0" y="0" width="200" height="88" ry="8"/>
      </g>
      <text>
        <tspan x="48" y="48">IRIS Clients</tspan>
      </text>
    </g>
    <g transform="translate(16,176)">
      <rect x="0" y="0" width="176" height="104" ry="8"
        style="fill:#ffe6c4;stroke:#000;stroke-width:2"/>
      <text>
        <tspan x="16" y="40">Apache Server</tspan>
        <tspan x="24" y="60">- Client JARs</tspan>
        <tspan x="24" y="80">- Map Tiles</tspan>
      </text>
    </g>
    <g transform="translate(232,176)">
      <rect x="0" y="0" width="192" height="120" ry="8"
            style="fill:#e2c4ff;stroke:#000;stroke-width:2"/>
      <text>
        <tspan x="40" y="60">IRIS Server</tspan>
      </text>
    </g>
    <g transform="translate(464,208)">
      <rect x="0" y="0" width="160" height="88" ry="8"
        style="fill:#d0ffc4;stroke:#000;stroke-width:2"/>
      <text>
        <tspan x="16" y="40">Authentication</tspan>
        <tspan x="16" y="60">Server (LDAP)</tspan>
      </text>
    </g>
    <g transform="translate(96,360)">
      <g style="fill:#f6ffc4;stroke:#000;stroke-width:2">
        <g style="opacity:0.5">
          <rect x="16" y="16" width="208" height="88" ry="8"
                style="opacity:0.5"/>
          <rect x="8" y="8" width="208" height="88" ry="8"/>
        </g>
        <rect x="0" y="0" width="208" height="88" ry="8"/>
      </g>
      <text>
        <tspan x="16" y="40">Traffic Monitoring</tspan>
        <tspan x="16" y="60">and Control Devices</tspan>
      </text>
    </g>
    <g transform="translate(368,360)">
      <rect x="0" y="0" width="152" height="88" ry="8"
        style="fill:#c4d1ff;stroke:#000;stroke-width:2" />
      <text>
        <tspan x="16" y="40">Database</tspan>
        <tspan x="16" y="60">(PostgreSQL)</tspan>
      </text>
    </g>
    <g style="stroke:#000;stroke-width:2;marker-end:url(#Arrow1Mend)">
      <path d="m 176,112 -32,64"/>
      <path d="m 256,112 32,64"/>
      <path d="m 424,240 40,8"/>
      <path d="m 272,296 -32,64"/>
      <path d="m 368,296 32,64"/>
    </g>
  </g>
</svg>

<p>
	The software has a client/server architecture.
	The server handles communication with all traffic control devices.
	Configuration data is stored in a PostgreSQL database.
	The client software is distributed by an Apache web server, using
	Java Web Start.
	All communication between the server and clients is encrypted using
	SSL.
	The server passes authentication requests off to an external LDAP
	server, allowing IRIS to integrate into an existing authentication
	system.
	The client presents an intuitive map-based user interface to system
	operators.
</p>

<h3>Devices</h3>
<p>
	IRIS is able to manage several different types of traffic monitoring and
	control devices.
	These include:
</p>
<ul>
	<li>DMS (dynamic message signs) or CMS</li>
	<li>Ramp meters</li>
	<li>VDS (vehicle detection sensors)</li>
	<li>LCS (lane-use control signals)</li>
	<li>CCTV cameras (pan/tilt/zoom)</li>
	<li>Video switchers</li>
	<li>In-road lighting (dynamic striping)</li>
	<li>Warning Beacons</li>
	<li>Future: Precipitation Sensors</li>
</ul>
<h3>Protocols</h3>
<p>
	Many different protocols are supported for communicating with the
	various device types.
	Additional protocols can be added for any existing device type by
	programming a simple driver interface.
	These are some existing protocols:
</p>
<ul>
	<li>NTCIP class A, B and C (DMS)</li>
	<li>DMS-XML (DMS)</li>
	<li>MnDOT 4- and 5-bit (VDS, ramp meters, LCS, beacons, IRL)</li>
	<li>Wavetronix SS105 and SS125 (VDS)</li>
	<li>3M Canoga (VDS)</li>
	<li>Pelco D (pan/tilt/zoom)</li>
	<li>A/D "manchester" (pan/tilt/zoom)</li>
	<li>Vicon (pan/tilt/zoom)</li>
	<li>AWS (automated warning system)</li>
	<li>Pelco Video Switcher</li>
	<li>Vicon Video Switcher</li>
</ul>
<h3>Featuers</h3>
<p>
	IRIS also contains some higher-level traffic management features:
</p>
<ul>
	<li>Scheduled deployment of control devices</li>
	<li>Continuously updated density, speed and flow maps</li>
	<li>Travel time estimation for traveller information</li>
	<li>Incident management</li>
	<li>Variable speed advisories</li>
	<li>Coordinated ramp metering strategies</li>
</ul>
</div>

<h2 id="installation">Installation
<span class="show">[<span id="installation_show">show</span><span id="installation_hide">hide</span>]</span></h2>
<div id="installation_div">

<h3>Operating System Setup</h3>
<p>
	Install <a href="http://fedoraproject.org">Fedora</a> onto the server
	computer.
	Other operating systems, such as Red Hat Enterprise Linux, can also be
	used, but the procedures may vary slightly.
	This machine should have a minimum of 2 GB of RAM and 200 GB hard drive
	storage space.
	The IRIS server does not have a GUI interface, so this computer can be
	set up headless in a server room.
</p>

<h3>Install Dependencies</h3>
<p>
	Install package dependencies, including
	<a href="http://openjdk.java.net">OpenJDK</a>,
	<a href="http://www.postgresql.org">PostgreSQL</a> and
	<a href="http://www.apache.org">Apache</a>.
	This can be performed with yum by running the following command (as
	root):
</p>
<pre class="code">yum install java-1.6.0-openjdk postgresql-server postgresql-jdbc httpd</pre>

<h3>Install IRIS</h3>
<p>
	<a href="http://iris.dot.state.mn.us/rpms/">Download</a> and install
	the IRIS package.
	This should be a file called <i>iris-xx.yy.zz-bb.i386.rpm</i>, with
	<i>xx</i> indicating the major version, <i>yy</i> minor, <i>zz</i>
	micro, and <i>bb</i> the build version.
	It can be installed with the following command (as root):
</p>
<pre class="code">rpm -i iris-xx.yy.zz-bb.i386.rpm</pre>
<p>
	Next, you must initialize the IRIS server installation.
	This will create a SSL key pair for encrypted communication between the
	server and clients.
	You will be prompted for a Distinguished Name to use while
	creating a new self-signed certificate.
	Run the following command (as root):
</p>
<pre class="code">service iris init</pre>

<h3>Authentication Setup</h3>
<p>
	Setup an LDAP server for user authentication.
	If your organization already has an LDAP server, such as Active
	Directory, you should use that.
	This will allow operators to log into IRIS without requiring them to
	remember an additional user name and password.
	Otherwise, you can install and configure
	<a href="http://www.openldap.org">OpenLDAP</a>.
</p>
<p>
	IRIS can also be configured to use multiple LDAP servers at once.
	When a user attempts to log in, each defined LDAP server will be
	checked, in order, until authentication succeeds.
	If authentication fails on all LDAP servers, then login will fail.
</p>
<p>
	Using a text editor, open the <i>/etc/iris/iris-server.properties</i>
	file.
	Locate the line which starts with <i>sonar.ldap.urls</i>.
	Change the value of this property to the URL(s) of your LDAP server(s).
	Multiple URLs must be separated by a space.
	The URL protocol is normally <i>ldap:</i>, but must be <i>ldaps:</i>
	for encrypted communication over SSL.
</p>
<p>
	(Optional)
	If your LDAP server is configured to use SSL for authentication, then
	you must import the certificate into the IRIS keystore.
	Once you have obtained the SSL certificate, save it as <i>ldap.cert</i>.
	Now you can import it with the following command (as root):
</p>
<pre class="code">keytool -import -alias ldap-cert -keystore /etc/iris/iris-server.keystore -file ldap.cert</pre>

<h3>Database Setup</h3>
<p>
	The PostgreSQL database must be initialized before use.
	This can be accomplished with the following command (as root):
</p>
<pre class="code">service postgresql initdb</pre>
<p>
	Now, the database must be configured to allow the IRIS server to
	connect using a local TCP socket.
	Edit the <i>/var/lib/pgsql/data/pg_hba.conf</i> file so that it includes
	the following line:
</p>
<pre class="code">host    all         all         127.0.0.1/32          password</pre>
<p>
	The PostgreSQL server can now be started:
</p>
<pre class="code">service postgresql start</pre>
<p>
	IRIS uses the PostgreSQL JDBC driver to access the database.
	This driver needs to be added to the java classpath.
	Run the following command (as root):
</p>
<pre class="code">ln -snf /usr/share/java/postgresql-jdbc.jar /usr/lib/jvm/jre/lib/ext/</pre>
<p>
	The <i>tms</i> user account is used by IRIS to connect to the PostgreSQL
	database.
	Run the following commands to configure this account:
</p>
<pre class="code">su postgres
createuser -S -D -R -W tms
exit</pre>
<p>
	You will be prompted for a password when running createuser.
	This same password must also be entered in the
	<i>/etc/iris/iris-server.properties</i> file.
	Open the file in a text editor and locate the line starting with
	#db.password.
	Remove the <i>#</i> and change the password to match.
</p>
<p>
	A database template must now be loaded with all the table definitions
	that IRIS needs.
	The following commands will create the <i>tms</i> database and
	populate it with the template:
</p>
<pre class="code">su postgres
createdb tms
psql tms -f /var/lib/iris/sql/tms-template.sql
exit</pre>
<p>
	A valid LDAP user must be added to the database to allow an initial
	administrator login.
	Run the following commands, replacing the bold values with the user's
	information:
</p>
<pre class="code">su tms
psql tms
INSERT INTO iris.i_user (name, full_name, dn, role, enabled)
	VALUES('<b>name</b>', '<b>full_name</b>', '<b>dn</b>',
	'administrator', true);
\q
exit
</pre>

<h3>Web Server Setup</h3>
<p>
	The Apache web server can be started with the following command:
</p>
<pre class="code">service httpd start</pre>

<h3>IRIS Server Setup</h3>
<p>
	Now, the IRIS server can be started with the following command:
</p>
<pre class="code">service iris start</pre>
<p>
	Check that everything started OK:
</p>
<pre class="code">tail -f -n 40 /var/log/iris/iris.stderr</pre>
<p>
	From a client computer with Java installed, point your web browser at
	http://YOUR_SERVER_NAME/iris-client/.
	From there, you should be able to launch the IRIS client Web Start
	application and log in.
</p>

<h3>Service Configuration</h3>
<p>
	Finally, PostgreSQL, Apache and IRIS should be configured to start when
	the operating system is rebooted.
	To do this, run following commands (as root):
</p>
<pre class="code">chkconfig postgresql on
chkconfig httpd on
chkconfig iris on</pre>

</div>

<h2 id="basic_setup">Basic Setup
<span class="show">[<span id="basic_setup_show">show</span><span id="basic_setup_hide">hide</span>]</span></h2>
<div id="basic_setup_div">

<h3>System Attributes</h3>
FIXME

<h3>Users and Roles</h3>
FIXME

<h3>Mapping</h3>
FIXME

<h3>Roads and Nodes</h3>
FIXME

<h3>Comm Links</h3>
FIXME

</div>

<h2 id="devices">Devices
<span class="show">[<span id="devices_show">show</span><span id="devices_hide">hide</span>]</span></h2>
<div id="devices_div">

<h3>Vehicle Detection</h3>
FIXME

<h3>Cameras and Video</h3>
FIXME

<h3>Dynamic Message Signs</h3>
FIXME

<h3>Lane-Use Control Signs</h3>
FIXME

<h3>Ramp Meters</h3>
FIXME

<h3>Warning Beacons</h3>
FIXME

<h3>Lane Marking</h3>
FIXME

</div>

<h2 id="features">Features
<span class="show">[<span id="features_show">show</span><span id="features_hide">hide</span>]</span></h2>
<div id="features_div">

<h3>Plans and Schedules</h3>
FIXME

<h3>Traffic Data Map</h3>
FIXME

<h3>Travel Time Estimation</h3>
FIXME

<h3>Incident Management</h3>
FIXME

<h3>Variable Speed Advisory</h3>
FIXME

<h3>Ramp Metering Strategies</h3>
FIXME

</div>

<h2 id="troubleshooting">Troubleshooting
<span class="show">[<span id="troubleshooting_show">show</span><span id="troubleshooting_hide">hide</span>]</span></h2>
<div id="troubleshooting_div">

<h3>Error Logs</h3>
FIXME

<h3>Realtime XML Output</h3>
FIXME

<h3>Database Event Tables</h3>
FIXME

<h3>Debug Trace Logs</h3>
FIXME

</div>

<h2 id="maintenance">Maintenance
<span class="show">[<span id="maintenance_show">show</span><span id="maintenance_hide">hide</span>]</span></h2>
<div id="maintenance_div">
<p>
	Once an IRIS system is set up, there are a few maintenance tasks which
	need to be done to ensure reliable operation.
</p>
<h3>Database Backups</h3>
FIXME

<h3>IRIS Upgrades</h3>
FIXME

<h3>System Software Updates</h3>
FIXME

<h3>Monitoring Logs</h3>
FIXME

</div>

<h2 id="development">Development
<span class="show">[<span id="development_show">show</span><span id="development_hide">hide</span>]</span></h2>
<div id="development_div">

<h3>Building</h3>
FIXME

<h3>History</h3>
FIXME

<h3>Future Plans</h3>
FIXME

<h3>Contributing</h3>
FIXME

<h3>Coding Style</h3>
FIXME

</div>

</div>

</body>
</html>
